*unfurl.txt*	For Neovim 0.9+ with Denops	Last change: {date}

==============================================================================
CONTENTS						*unfurl-contents*

1. Introduction				|unfurl-introduction|
2. Requirements				|unfurl-requirements|
3. Installation				|unfurl-installation|
4. Usage					|unfurl-usage|
5. Commands				|unfurl-commands|

==============================================================================
INTRODUCTION					*unfurl-introduction*

unfurl.nvim is a Neovim plugin that fetches the title and meta information (like image, type) from a given URL and inserts it into the current buffer in Markdown format. It's useful for quickly recording information about web pages when taking notes.

==============================================================================
REQUIREMENTS					*unfurl-requirements*

- [Neovim](https://neovim.io/) 0.9+
- [denops.vim](https://github.com/vim-denops/denops.vim)
- [img-clip.nvim](https://github.com/HakonHarnes/img-clip.nvim)

==============================================================================
INSTALLATION					*unfurl-installation*

Install using [lazy.nvim](https://github.com/folke/lazy.nvim). Ensure `denops.vim` is also installed.
See the README.md for the installation snippet.

==============================================================================
USAGE						*unfurl-usage*

This plugin provides commands for basic interaction. See |unfurl-commands|.

==============================================================================
COMMANDS					*unfurl-commands*

*:Unfurl* {url}
	Fetches the HTML title, meta image, and meta type (if available) from the
	specified {url}. Inserts the meta type as `(Type: type)`, the title as a
	Markdown link (`[title](url)`), and the meta image URL directly after the
	current cursor line.
	Example:
>
	:Unfurl https://github.com
<
	(`(Type: website)`, `[GitHub: Let’s build from here · GitHub](https://github.com)`,
	 and the meta image URL might be inserted below the current line)
==============================================================================
CONFIGURATION					*unfurl-configuration*

You can configure the behavior of `img-clip.nvim` when pasting images by setting
the global variable |g:unfurl_img_clip_options|. This variable should be a
dictionary containing options that will be passed directly to `img-clip`.

Example configuration in Vimscript: >
	let g:unfurl_img_clip_options = {
	\   'use_absolute_path': v:false,
	\   'download_images': v:true,
	\   'template': '![]($FILE_PATH)',
	\ }
<
Example configuration in Lua: >
	vim.g.unfurl_img_clip_options = {
	  use_absolute_path = false,
	  download_images = true,
	  template = "![]($FILE_PATH)",
	  -- Add other img-clip options here as needed
	}
<
Refer to the `img-clip.nvim` documentation for available options. If
|g:unfurl_img_clip_options| is not set, the plugin will use the default options
of `img-clip.nvim`.

==============================================================================
 vim:tw=78:ts=8:ft=help:norl: